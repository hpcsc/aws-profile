name: Master Build and Publish
on:
  push:
    branches:
      - master
jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest, windows-latest]
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Install Task
      uses: Arduino/actions/setup-taskfile@master

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        task install

    - name: Build
      run: |
        task build
      env:
        VERSION: ${{github.sha}}
        OUTPUT: bin/aws-profile-${{runner.os}}-${{github.sha}}

    - name: Test
      run: |
        task test

    - name: Upload coverage to codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.txt
        flags: unittests
        name: aws-profile-coverage
        fail_ci_if_error: true
        verbose: true

    - name: Generate coverage html report
      run: |
        task generate-coverage-report

    - if: matrix.os == 'macos-latest'
      name: Run E2E Test
      run: |
        task e2e
      env:
        EXECUTABLE: bin/aws-profile-${{runner.os}}-${{github.sha}}

    - name: Upload binary as artifact
      uses: actions/upload-artifact@v1
      with:
        name: aws-profile-${{runner.os}}-${{github.sha}}
        path: ./bin/aws-profile-${{runner.os}}-${{github.sha}}

    - if: matrix.os == 'macos-latest'
      name: Upload coverage html report as artifact
      uses: actions/upload-artifact@v1
      with:
        name: coverage-html-report
        path: ./coverage.html

  publish:
    name: Publish to Bintray
    runs-on: ubuntu-18.04
    needs: build
    steps:
    - name: Download Linux artifact
      uses: actions/download-artifact@v1
      with:
        name: aws-profile-Linux-${{github.sha}}
        path: ./bin
    - name: Download MacOS artifact
      uses: actions/download-artifact@v1
      with:
        name: aws-profile-macOS-${{github.sha}}
        path: ./bin
    - name: Download Windows artifact
      uses: actions/download-artifact@v1
      with:
        name: aws-profile-Windows-${{github.sha}}
        path: ./bin
    - name: List downloaded artifacts
      run: ls -la ./bin
    - name: Upload to Bintray
      uses: hpcsc/upload-bintray-docker-action@v1
      with:
        repository: aws-profile
        package: master
        version: ${{github.sha}}
        sourcePath: ./bin/aws-profile*
        username: hpcsc
        apiKey: ${{secrets.BINTRAY_API_KEY}}
